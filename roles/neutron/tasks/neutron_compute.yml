# SPDX-License-Identifier: MIT-0
---
# tasks file for roles/neutron/tasks/neutron_controller.yml
- name: Check if the tasks has been running
  block:
    - name: Ensure Mark Directory Exists
      ansible.builtin.file:
        path: "{{ neutron_mark_dir_path }}"
        state: directory
        mode: '0755'

    - name: Check if neutron tasks have been run
      ansible.builtin.stat:
        name: "{{ neutron_mark_files_path.compute_conf_success }}"
      register: neutron_mark_file

    - name: Skip if neutron tasks have been run
      ansible.builtin.meta: end_role
      when: neutron_mark_file.stat.exists

- name: Configure Sysctl Parameters for network
  block:
    - name: Ensure br_netfilter module is loaded
      community.general.modprobe:
        name: br_netfilter
        state: present

    - name: Configure Sysctl Parameters
      ansible.posix.sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        sysctl_set: true
      loop:
        - { name: net.ipv4.conf.all.rp_filter, value: 0 }
        - { name: net.ipv4.conf.default.rp_filter, value: 0 }
        - { name: net.bridge.bridge-nf-call-iptables, value: 1 }
        - { name: net.bridge.bridge-nf-call-ip6tables, value: 1 }

    - name: Apply Sysctl Settings
      ansible.builtin.command:
        cmd: sysctl -p
      changed_when: false

- name: Install Neutron Packages And Deploy Neutron Configuration
  block:
    - name: Install Neutron Packages
      ansible.builtin.dnf:
        name: "{{ neutron_compute_packages }}"
        state: present

    - name: Deploy Neutron Configuration Template
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "0644"
      loop:
        - { src: "{{ neutron_compute_conf_template_src.neutron_conf }}", dest: "{{ neutron_compute_conf_path.neutron_conf }}" }
        - { src: "{{ neutron_compute_conf_template_src.openvswitch_conf }}", dest: "{{ neutron_compute_conf_path.openvswitch_conf }}" }

    - name: Configure Nova to use Neutron
      community.general.ini_file:
        path: "{{ neutron_compute_conf_path.nova_conf }}"
        section: "{{ item.section }}"
        option: "{{ item.option }}"
        value: "{{ item.value }}"
        mode: "0644"
      loop:
        - { section: DEFAULT, option: linuxnet_interface_driver, value: nova.network.linux_net.LinuxOVSlnterfaceDriver }
        - { section: DEFAULT, option: vif_plugging_is_fatal, value: true }
        - { section: DEFAULT, option: vif_plugging_timeout, value: 300 }
        - { section: neutron, option: auth_url, value: "http://controller:5000" }
        - { section: neutron, option: auth_type, value: password }
        - { section: neutron, option: project_domain_name, value: default }
        - { section: neutron, option: user_domain_name, value: default }
        - { section: neutron, option: region_name, value: RegionOne }
        - { section: neutron, option: project_name, value: service }
        - { section: neutron, option: username, value: neutron }
        - { section: neutron, option: password, value: "{{ neutron_openstack_service_password.neutron }}" }

    - name: Restart openstack-nova-compute
      ansible.builtin.service:
        name: openstack-nova-compute
        state: restarted
        enabled: true

    - name: Restart neutron-openvswitch-agent
      ansible.builtin.service:
        name: neutron-openvswitch-agent
        state: restarted
        enabled: true

- name: Create Mark file to indicate that the tasks have been run
  ansible.builtin.file:
    path: "{{ neutron_mark_files_path.compute_conf_success }}"
    state: touch
    mode: '0644'

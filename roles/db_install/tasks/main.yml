# SPDX-License-Identifier: MIT-0
---
# tasks file for roles/db_install
- name: Check if the tasks has been running
  block:
    - name: Ensure Mark Directory Exists
      ansible.builtin.file:
        path: "{{ db_install_mark_dir_path }}"
        state: directory
        mode: '0755'

    - name: Check if db_install tasks have been run
      ansible.builtin.stat:
        name: "{{ db_install_mark_file_path }}"
      register: db_install_mark_file

    - name: Skip if db_install tasks have been run
      ansible.builtin.meta: end_role
      when: db_install_mark_file.stat.exists

- name: Install Mariadb_Server
  ansible.builtin.dnf:
    name: "{{ db_install_packages }}"
    state: present

- name: Configure OpenStack DB configure file
  ansible.builtin.template:
    src: "{{ db_install_db_conf_template_src }}"
    dest: "{{ db_install_db_conf_path }}"
    mode: '0644'
    owner: root
    group: root

- name: Restart Mariadb to apply the configure file
  block:
    - name: Ensure Mariadb is started
      ansible.builtin.service:
        name: mariadb
        state: started
        enabled: true

    - name: Restart Mariadb
      ansible.builtin.service:
        name: mariadb
        state: restarted
        enabled: true

- name: Init mariadb-server
  block:
# 所有的任务都使用unix socket来连接mariadb
# All the tasks use unix sockets to connect to mariadb
    - name: Delete test-user
      community.mysql.mysql_user:
        login_user: root
        login_unix_socket: "{{ db_install_mariadb_socket_path }}"
        name: ''
        state: absent
        host_all: true

    - name: Check if root'%' user exists
      community.mysql.mysql_query:
        login_user: root
        login_unix_socket: "{{ db_install_mariadb_socket_path }}"
        query: "SELECT COUNT(*) AS count FROM mysql.user WHERE user='root' AND host='%'"
      register: db_install_root_user_exists

    - name: Permit root access from anywhere
      community.mysql.mysql_user:
        login_user: root
        login_unix_socket: "{{ db_install_mariadb_socket_path }}"
        name: root
        host: '%'
        password: ''
        priv: '*.*:ALL,GRANT'
        state: present

    - name: Delete test databases
      community.mysql.mysql_db:
        login_user: root
        login_unix_socket: "{{ db_install_mariadb_socket_path }}"
        name: test
        state: absent

    - name: Flush privileges
      community.mysql.mysql_query:
        login_user: root
        login_unix_socket: "{{ db_install_mariadb_socket_path }}"
        query: FLUSH PRIVILEGES;

- name: Create mark file to indicate db_install tasks have been run
  ansible.builtin.file:
    path: "{{ db_install_mark_file_path }}"
    state: touch
    mode: '0644'
